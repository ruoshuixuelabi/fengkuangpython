"""
运行程序,得到了正确结果。实际上,上面程序等同于下面程序。
"""
age = 45
if age > 60:
    print("老年人")
# 在原本的if条件中增加了else的隐含条件
if age > 40 and not (age > 60):
    print("中年人")
# 在原本的if条件中增加了else的隐含条件
if age > 20 and not (age > 60) and not (age > 40 and not (age > 60)):
    print("青年人")
"""
上面程序的判断逻辑即转为如下三种情形。
age  大于60岁,判断为"老年人"。
age  大于40岁,且 age 小于或等于60岁,判断为"中年人"。
age  大于20岁,且 age 小于或等于40岁,判断为"青年人"。

上面的判断逻辑才是实际希望看到的。因此,当使用ifelse语句进行流程控制时, 一定不要忽略了else所带的隐含条件。

如果每次都去计算 if条件和 else 条件的交集也是一件非常烦琐的事情,为了避免出现上面的错误,在使用 if else 语句时有一条基本规则：
总是优先把包含范围小的条件放在前面处理。对比 age>60 和 age>20 两个条件,明显age>60 的范围更小,所以应该先处理age>60 的情形。

注意：
在使用ifelse分支语句时, 一定要先处理包含范围更小的情形。
"""