"""
4.6.3   控制台五子棋

利用二维列表还可以完成五子棋、连连看、俄罗斯方块、扫雷等常见小游戏。
下面简单介绍利用二维列表实现五子棋。先定义一个二维列表作为棋盘,每当一个棋手下一步棋时,也就是为二维列表的一个数组元素赋值。
下面程序完成了这个游戏的初步功能。

从图4.3来看,程序上面显示的黑点是棋手下的棋,电脑还没有下棋,电脑下棋可以使用随机生成的两个坐标值来控制,
当然也可以增加人工智能(但这已经超出了本书的范围,实际上也很简单)来控制下棋。

读者需要在这个程序的基础上进行完善,保证在用户和电脑下的棋的坐标上不能有棋子(通过判断对应数组元素只能是"十"来确定),
还需要进行4次循环扫描,判断横、竖、左斜、右斜是 否有5颗棋子连在一起,从而判定胜负。
"""
# 定义棋盘的大小
BOARD_SIZE = 15
# 定义一个二维列表来充当棋盘
board = []


def initBoard():
    # 把每个元素赋为"╋",用于在控制台画出棋盘
    for i in range(BOARD_SIZE):
        row = ["╋"] * BOARD_SIZE
        board.append(row)


# 在控制台输出棋盘的方法
def printBoard():
    # 打印每个列表元素
    for i in range(BOARD_SIZE):
        for j in range(BOARD_SIZE):
            # 打印列表元素后不换行
            print(board[i][j], end="")
        # 每打印完一行列表元素后输出一个换行符
        print()


initBoard()
printBoard()
inputStr = input("请输入您下棋的坐标,应以x,y的格式：\n")
while inputStr != None:
    # 将用户输入的字符串以逗号（,）作为分隔符,分隔成2个字符串
    x_str, y_str = inputStr.split(sep=",")
    # 把对应的列表元素赋为"●"。
    board[int(y_str) - 1][int(x_str) - 1] = "●"
    '''
     电脑随机生成2个整数,作为电脑下棋的坐标,赋给board列表
     还涉及
        1．坐标的有效性,只能是数字,不能超出棋盘范围
        2．下的棋的点,不能重复下棋
        3．每次下棋后,需要扫描谁赢了
    '''
    printBoard()
    inputStr = input("请输入您下棋的坐标,应以x,y的格式：\n")
