"""
6.2 方法

方法是类或对象的行为特征的抽象,但 Python 的方法其实也是函数,其定义方式、调用方式和函数都非常相似,
因此 Python 的方法并不仅仅是单纯的方法,它与函数也有莫大的关系。

6.2.1 类也能调用实例方法

前面讲过,在 Python 的类体中定义的方法默认都是实例方法,前面也示范了通过对象来调用实例方法。

但要提醒大家的是,Python 的类在很大程度上是一个命名空间——
当程序在类体中定义变量、定义方法时,与前面介绍的定义变量、定义函数其实并没有太大地不同。对比如下代码。
"""


# 定义全局空间的 foo 函数
def foo():
    print("全局空间的foo方法")


# 全局空间的 bar 变量
bar = 20


class Bird:
    # 定义Bird空间的foo函数
    def foo():
        print("Bird空间的foo方法")

    # 定义Bird空间的bar变量
    bar = 200


# 调用全局空间的函数和变量
foo()
print(bar)
# 调用Bird空间的函数和变量
Bird.foo()
print(Bird.bar)
"""
上面代码在全局空间和 Bird 类(Bird 空间)中分别定义了 foo() 函数和 bar 变量,从定义它们的代码来看,几乎没有任何区别,
只是在 Bird 类中定义它们时需要缩进。

接下来程序在调用 Bird 空间内的 bar 变量和 foo() 函数(方法)时,只要添加 Bird. 前缀即可,
这说明完全可以通过 Bird 类来调用 foo()函数(方法)。这就是类调用实例方法的证明。
"""
