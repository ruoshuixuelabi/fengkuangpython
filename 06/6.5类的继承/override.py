"""
6.5.3	重写父类的方法
1.  子类扩展了父类,子类是一种特殊的父类。大部分时候,子类总是以父类为基础,额外增加新的方法。但有一种情况例外：
子类需要重写父类的方法。例如鸟类都包含了飞翔方法,其中鸵鸟是一种特殊的鸟类,因此鸵鸟应该是鸟的子类,
它也将从鸟类获得飞翔方法,但这个飞翔方法明显不适合鸵鸟,为此,鸵鸟需要重写鸟类的方法。
2.  运行上面程序,将看到运行 os.fly() 时执行的不再是Bird类的fly()方法,而是 Ostrich 类的 fly()方法。
3.  这种子类包含与父类同名的方法的现象被称为方法重写(Override),也被称为方法覆盖。
可以说子类重写了父类的方法,也可以说子类覆盖了父类的方法。
"""


class Bird:
    # Bird类的fly()方法
    def fly(self):
        print("我在天空里自由自在地飞翔...")


class Ostrich(Bird):
    # 重写Bird类的fly()方法
    def fly(self):
        print("我只能在地上奔跑...")


# 创建Ostrich对象
os = Ostrich()
# 执行Ostrich对象的fly()方法,将输出"我只能在地上奔跑..."
os.fly()
