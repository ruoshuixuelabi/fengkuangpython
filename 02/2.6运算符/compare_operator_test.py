"""
2.6.6 比较运算符与 bool 类型

Python提供了bool类型来表示真(对)或假(错),比如常见的5>3比较算式,这个是正确的,在程序世界里称之为真(对),
Python使用True来代表;再比如4>20比较算式,这个是错误的,在程序世界里称之为假(错),Python使用False来代表。

由此可见,bool 类型就是用于代表某个事情的真(对)或假(错),如果这个事情是正确的,用True代表;如果这个事情是错误的,用False代表。

比较运算符用于判断两个值(这两个值既可以是变量,也可以是常量,还可以是表达式)之间的大小,
比较运算的结果是 bool 值(True 代表真,False 代表假)。Python 支持的比较运算符如下。
(1) >：大于,如果运算符前面的值大于后面的值,则返回True;否则返回False。
(2) >=：大于或等于,如果运算符前面的值大于或等于后面的值,则返回True;否则返回False。
(3) <：小于,如果运算符前面的值小于后面的值,则返回True; 否则返回False。
(4) <=：小于或等于,如果运算符前面的值小于或等于后面的值,则返回True;否则返回False。
(5) ==：等于,如果运算符前面的值等于后面的值,则返回True;否则返回False。
(6) !=：不等于,如果运算符前面的值不等于后面的值,则返回True;否则返回False。
(7) is： 判断两个变量所引用的对象是否相同,如果相同则返回True。
(8) is not：判断两个变量所引用的对象是否不相同,如果不相同则返回True。

Python 的两个 bool 值分别是True 和 False,但实际上True也可被当成整数1使用,False也可被当成整数0使用。
也就是说, True、False两个值完全可以参与各种算术运算。

关于 == 与 is 看上去很相似,但实质上有区别,== 只比较两个变量的值,但is要求两个变量引用同一个对象。
"""
# 输出True
print("5是否大于 4：", 5 > 4)
# 输出False
print("3的4次方是否大于等于90.0：", 3 ** 4 >= 90)
# 输出True
print("20是否大于等于20.0：", 20 >= 20.0)
# 输出True
print("5和5.0是否相等：", 5 == 5.0)
# Python 的两个 bool 值分别是True 和 False,但实际上True也可被当成整数1使用,False也可被当成整数0使用。
# 也就是说, True、False两个值完全可以参与各种算术运算。
print("True和False是否相等：", True == False)  # 输出False
print("1和True是否相等：", 1 == True)  # 输出True
print("0和False是否相等：", 0 == False)  # 输出True
print(True + False)  # 输出1
print(False - True)  # 输出-1
