"""
2.4.6 原始字符串

由于字符串中的反斜线都有特殊的作用,因此当字符串中包含反斜线时,就需要对其进行转义。

比如写一条Windows 的路径：G:\publish\codes102\2.4,如果在 Python 程序中直接这样写肯定是不行的,需要写成：
G:\\publish\\codes102\\12.4, 这很烦人,此时可借助于原始字符串来解决这个问题。

原始字符串以"r"开头,原始字符串不会把反斜线当成特殊字符。因此,上面的 Windows 路径可直接写成r'G:\publish\codes\02\2.4'。

关于原始字符串的用法看如下程序
"""
s1 = r'G:\publish\codes\02\2.4'
print(s1)
# 原始字符串包含的引号,同样需要转义
# 由于原始字符串中的反斜线会对引号进行转义,因此原始字符串的结尾处不能是反斜线——
# 否则字符串结尾处的引号就被转义了,这样就导致字符串不能正确结束。
s2 = r'"Let\'s go", said Charlie'
print(s2)
# 如果确实要在原始字符串的结尾处包含反斜线怎么办呢?一种方式是不要使用原始字符串,而是改为使用长字符串写法(三引号字符串);
# 另一种方式就是将反斜线单独写。例如如下代码。
s3 = r'Good Morning' '\\'
print(s3)
"""
如果原始字符串中包含引号,程序同样需要对引号进行转义(否则 Python 同样无法对字符串的引号精确配对),
但此时用于转义的反斜线会变成字符串的一部分。
s2 = r'"Let\'s go", said Charlie'
print(s2)

由于原始字符串中的反斜线会对引号进行转义,因此原始字符串的结尾处不能是反斜线——
否则字符串结尾处的引号就被转义了,这样就导致字符串不能正确结束。

如果确实要在原始字符串的结尾处包含反斜线怎么办呢?一种方式是不要使用原始字符串,而是改为使用长字符串写法(三引号字符串);
另一种方式就是将反斜线单独写。例如如下代码。
s3 = r'Good Morning' '\\'
print(s3)

上面代码开始写了一个原始字符串r'Good Morning',紧接着程序使用仙写了一个包含反斜线的字符串,
Python 会自动将这两个字符串拼接在一起。运行上面代码会生成如下输出结果。
Good Morning\
"""