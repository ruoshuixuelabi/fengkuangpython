"""
如果要读取的文件所使用的字符集和当前操作系统的字符集不匹配,则有两种解决方式。
(1)使用二进制模式读取,然后用 bytes 的 decode()方法恢复成字符串。
(2)利用 codecs 模块的 open()函数来打开文件,该函数在打开文件时允许指定字符集。

下面程序使用二进制模式来读取文本文件。
"""
# 指定使用二进制方式读取文件内容
f = open("read_test3.py", 'rb', True)
# 直接读取全部文件,并调用bytes的decode将字节内容恢复成字符串
print(f.read().decode('utf-8'))
f.close()
"""
上面程序在调用 open()函数时,传入了 rb 模式,这表明采用二进制模式读取文件,此时文件对象的 read()方法返回的是 bytes 对象,
程序可调用 bytes 对象的 decode()方法将它恢复成字符串。 
由于此时读取的 read_test3.py文件是以 UTF-8 的格式保存的,因此程序需要使用 decode() 方法恢复字符串时显式指定使用 UTF-8 字符集。
"""